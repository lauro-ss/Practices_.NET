@page "/produtos"
@inject IProdutoService _produtoService
@inject NavigationManager NavManager

<PageTitle>Produtos</PageTitle>

<h3>Produtos</h3>
@if (data == null)
{
    <h4>Carregando...</h4>
}
else
{
    @if (data.Any())
    {
        <table>
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nome</th>
                    <th>Valor</th>
                    <th>Status</th>
                    <th>Quantidade</th>
                    <th>Categoria</th>
                    <th>Subcategoria</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in data)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Nome</td>
                        <td>@item.Valor</td>
                        <td>@item.Status</td>
                        <td>@item.Quantidade</td>
                        <td>@item.Categoria</td>
                        <td>@item.Subcategoria</td>
                        <td><button @onclick="() => EditarProduto(item.Id)">Editar</button></td>
                        <td><button @onclick="() => RemoverProduto(item.Id, item.Nome)">Remover</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@if(modal)
{
    <div class="modal" tabindex="-1" style="display:block; background: #00000085;">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Remover produto</h5>
               <button type="button" class="btn-close" @onclick="CloseModal"></button>
          </div>
          <div class="modal-body">
            <p>Tem certeza que deseja remover o produto: @nomeProduto?</p>
          </div>
          <div class="modal-footer">
             <button type="button" class="btn btn-secondary" @onclick="CloseModal">Fechar</button>
             <button type="button" class="btn btn-danger" @onclick="RemoverProduto">Remover</button>
          </div>
        </div>
      </div>
    </div>
}

@if (modalEdit)
{
    <div class="modal" tabindex="-1" style="display:block; background: #00000085;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Editar Produto</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                   <EditarProduto Id="idProduto" OnEditSubmit="EditSubmit" OnCloseModal="CloseModal"></EditarProduto>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public IEnumerable<ProdutoDTO>? data { get; set; } = null;
    private bool modal = false;
    private bool modalEdit = false;
    private int idProduto = 0;
    private string nomeProduto = "";

    protected async Task EditSubmit (Produto produto)
    {
        var result = await _produtoService.Edit(produto);
        
        if (result != null)
        {
            data = await _produtoService.GetAllDTO();
            modalEdit = false;
            idProduto = 0;
            /*await InvokeAsync(() =>
            {
                StateHasChanged();
            });*/
        }
    }


    private async Task EditarProduto(int id)
    {
        modalEdit = true;
        idProduto = id;
        //NavManager.NavigateTo($"/EditarProduto/{id}");
    }

    private async Task CloseModal()
    {
        modal = false;
        modalEdit = false;
    }

    private async Task RemoverProduto(int id, string nome)
    {
        modal = true;
        idProduto = id;
        nomeProduto = nome;
    }

    private async Task RemoverProduto()
    {
        await _produtoService.Delete(idProduto);
        data = await _produtoService.GetAllDTO();
        modal = false;
        idProduto = 0;
        nomeProduto = "";
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}
